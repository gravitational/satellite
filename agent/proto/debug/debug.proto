/*
Copyright 2020 Gravitational, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";

package debug;

import "gogo.proto";

// Debug allows to capture debug information
service Debug {
  // Profile streams a specific debug profile
  rpc Profile(ProfileRequest) returns (stream ProfileResponse) {}
}

// ProfileRequest describes the request of the Profile API
message ProfileRequest {
    // Profile specifies the profile name
    string profile = 1;
    // Output specifies the output format.
    enum Output {
        option (gogoproto.goproto_enum_prefix) = false;
        option (gogoproto.goproto_enum_stringer) = false;
        option (gogoproto.enum_customname) = "Output";

        // OutputNormal outputs the profile with additional details like comments or line numbers
        Normal = 0 [(gogoproto.enumvalue_customname) = "OutputNormal"];
        // OutputBasic outputs the profile in minimal form
        Basic = 1 [(gogoproto.enumvalue_customname) = "OutputBasic"];
        // OutputDebug outputs the profile in most detailed form
        Debug = 2 [(gogoproto.enumvalue_customname) = "OutputDebug"];
    }
    Output output = 2;
}

// ProfileResponse describes the response of the Profile API
message ProfileResponse {
    bytes output = 1;
}
